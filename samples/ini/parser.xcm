/**
 * A basic INI parser.
 */
skip ' ' | '\t' | '\r' | '\n';
skip ';' & opt repeat (not '\n' then *);

// Lexer
token T_DQ_STRING       as '"' & repeat ('\\' then * else not '"' then *) & '"';
token T_SQ_STRING       as '\'' & repeat ('\\' then * else not '\'' then *) & '\'';
token T_IDENTIFIER      as repeat (not (' ' | '\t' | '\r' | '\n' | '=' | '[' | ']') then *);
token T_SECTION_OPEN    as '[';
token T_SECTION_CLOSE   as ']';
token T_ASSIGNMENT      as '=';

// Parser
alias node LITERAL  as append T_IDENTIFIER;
alias node STRING   as append (T_DQ_STRING | T_SQ_STRING);
alias node ENTRY    as append (T_IDENTIFIER & T_ASSIGNMENT & (LITERAL | STRING));
alias node ENTRIES  as ENTRY & opt place next ENTRIES;

node<200> SECTION   as T_SECTION_OPEN & append (T_IDENTIFIER & T_SECTION_CLOSE & opt ENTRIES);
node<201> GLOBAL    as ENTRY;